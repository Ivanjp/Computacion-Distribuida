
import java.awt.Graphics;
import java.awt.Image;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Jorge Iván Pérez Pérez
 */
public class Home extends javax.swing.JFrame {

    String token = "";
    String user = "";
    DefaultTableModel modelo = new DefaultTableModel();

    /**
     * Creates new form Home
     */
    public Home(String tk, String usuario) {
        initComponents();
        token = tk;
        user = usuario;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel3 = new Fondo();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        botonAgregaReg = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaRegUsuario = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        registroHora = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        registroMinutos = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        registroSegundos = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        registroTipoCarrera = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        buscaRegU = new javax.swing.JButton();
        km = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        mts = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        dia = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        mes = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        anio = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jPanel4 = new Fondo();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaRegGlobal = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        botonTipoCarGlob = new javax.swing.JComboBox<>();
        btnconsultaG = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        BotonCerrarSesion = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel10.setFont(new java.awt.Font("Century", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Agregar un nuevo registro");

        jLabel11.setFont(new java.awt.Font("Century", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Tus Registros");

        botonAgregaReg.setText("Agregar Registro");
        botonAgregaReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregaRegActionPerformed(evt);
            }
        });

        tablaRegUsuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Distancias", "Tiempo", "Tipo", "Fecha"
            }
        ));
        jScrollPane4.setViewportView(tablaRegUsuario);

        jLabel12.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel12.setText("Distancia");

        jLabel13.setFont(new java.awt.Font("Microsoft JhengHei Light", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel13.setText("Tiempo");

        registroHora.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09" }));
        registroHora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registroHoraActionPerformed(evt);
            }
        });

        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Hrs");

        registroMinutos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        registroMinutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registroMinutosActionPerformed(evt);
            }
        });

        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("min");

        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("seg");

        registroSegundos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        registroSegundos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registroSegundosActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel17.setText("Tipo de Carrera");

        registroTipoCarrera.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Caminata", "Sprint", "Medio-Fondo", "Fondo" }));

        jLabel18.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel18.setText("Fecha (dd/mm/aaaa)");

        buscaRegU.setText("Consultar Registros");
        buscaRegU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscaRegUActionPerformed(evt);
            }
        });

        km.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" }));
        km.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kmActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("KM");

        mts.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Mts");

        dia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 51, 51));
        jLabel5.setText("dia");

        mes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 51, 51));
        jLabel6.setText("mes");

        anio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020" }));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 51, 51));
        jLabel7.setText("anio");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(buscaRegU)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(registroTipoCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(km, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(mts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel4))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(registroHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(registroMinutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel15)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(registroSegundos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel16))
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(dia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(botonAgregaReg)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(anio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7)))))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(buscaRegU))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(km, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(mts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(registroHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(registroMinutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(registroSegundos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(registroTipoCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(mes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(anio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addComponent(botonAgregaReg)))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Registros Personales", jPanel3);

        jLabel1.setFont(new java.awt.Font("Century", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Registros Globales de Carreras");

        tablaRegGlobal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Corredor", "Distancia", "Tiempo", "Tipo", "Fecha"
            }
        ));
        jScrollPane1.setViewportView(tablaRegGlobal);

        jLabel2.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Tipo de Carrera");

        botonTipoCarGlob.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Caminata", "Sprint", "Medio-Fondo", "Fondo" }));
        botonTipoCarGlob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonTipoCarGlobActionPerformed(evt);
            }
        });

        btnconsultaG.setText("Consultar");
        btnconsultaG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnconsultaGActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(255, 255, 255)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 36, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnconsultaG)
                            .addComponent(botonTipoCarGlob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(botonTipoCarGlob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(btnconsultaG)))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Registros Globales", jPanel4);

        jMenuBar1.setToolTipText("");

        BotonCerrarSesion.setText("Cerrar Sesion");
        BotonCerrarSesion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonCerrarSesionMouseClicked(evt);
            }
        });
        jMenuBar1.add(BotonCerrarSesion);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BotonCerrarSesionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonCerrarSesionMouseClicked
        // TODO add your handling code here:
        Login log = new Login();
        log.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BotonCerrarSesionMouseClicked

    private void registroSegundosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registroSegundosActionPerformed
        // TODO add your handling code here:
        //ELIMINAR
    }//GEN-LAST:event_registroSegundosActionPerformed

    private void registroMinutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registroMinutosActionPerformed
        // TODO add your handling code here:
        //ELIMINAR
    }//GEN-LAST:event_registroMinutosActionPerformed

    private void registroHoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registroHoraActionPerformed
        // TODO add your handling code here:
        //ELIMINAR
    }//GEN-LAST:event_registroHoraActionPerformed

    private void botonAgregaRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregaRegActionPerformed
        // TODO add your handling code here:

        String KM = (String) km.getSelectedItem();
        String metros = (String) mts.getSelectedItem();
        String dist = KM + "." + metros;
        String hora = (String) registroHora.getSelectedItem();
        String min = (String) registroMinutos.getSelectedItem();
        String seg = (String) registroSegundos.getSelectedItem();
        String tipo = (String) registroTipoCarrera.getSelectedItem();
        String day = (String) dia.getSelectedItem();
        String month = (String) mes.getSelectedItem();
        String yr = (String) anio.getSelectedItem();
        String fecha = yr+"/"+month+"/"+day;

        try {
            this.sendGet(dist, hora, min, seg, tipo, fecha);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ocurrio un error intentalo de nuevo.");
            Logger.getLogger(Registro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_botonAgregaRegActionPerformed

    private void botonTipoCarGlobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonTipoCarGlobActionPerformed
        // TODO add your handling code here:
        //Consulta a la base de datos de el tipo de carrera seleccionado
        String tipo = (String) botonTipoCarGlob.getSelectedItem();
        
        //ELIMINAR
    }//GEN-LAST:event_botonTipoCarGlobActionPerformed

    private void buscaRegUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscaRegUActionPerformed
        // TODO add your handling code here:
        try {
            this.sendGetRU();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ocurrio un error intentalo de nuevo.");
            Logger.getLogger(Registro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buscaRegUActionPerformed

    private void btnconsultaGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnconsultaGActionPerformed
        // TODO add your handling code here:
        String tipo = (String) botonTipoCarGlob.getSelectedItem();
        try {
            this.sendGetG(tipo);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ocurrio un error intentalo de nuevo.");
            Logger.getLogger(Registro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnconsultaGActionPerformed

    private void kmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kmActionPerformed
        // TODO add your handling code here:
        
        //ELIMINAR
    }//GEN-LAST:event_kmActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu BotonCerrarSesion;
    private javax.swing.JComboBox<String> anio;
    private javax.swing.JButton botonAgregaReg;
    private javax.swing.JComboBox<String> botonTipoCarGlob;
    private javax.swing.JButton btnconsultaG;
    private javax.swing.JButton buscaRegU;
    private javax.swing.JComboBox<String> dia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JComboBox<String> km;
    private javax.swing.JComboBox<String> mes;
    private javax.swing.JComboBox<String> mts;
    private javax.swing.JComboBox<String> registroHora;
    private javax.swing.JComboBox<String> registroMinutos;
    private javax.swing.JComboBox<String> registroSegundos;
    private javax.swing.JComboBox<String> registroTipoCarrera;
    private javax.swing.JTable tablaRegGlobal;
    private javax.swing.JTable tablaRegUsuario;
    // End of variables declaration//GEN-END:variables

    class Fondo extends JPanel {

        private Image imagen;

        @Override
        public void paint(Graphics g) {
            imagen = new ImageIcon(getClass().getResource("/images/fondo2.jpg")).getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);
            super.paint(g);
        }
    }

    private void sendGet(String dist, String hora, String min, String seg, String tipo, String fecha) throws Exception {

        String url = "http://localhost:8000/api";
        String params = "op=regA&distancia=" + dist + "&hora=" + hora + "&min=" + min + "&seg=" + seg + "&tipo=" + tipo + "&fecha=" + fecha + "&usuario=" + user;
        HttpURLConnection httpClient = (HttpURLConnection) new URL(url + "?" + params).openConnection();

        // optional default is GET
        httpClient.setRequestMethod("GET");
        //

        httpClient.setRequestProperty("Authorization", "Bearer " + token);
        int responseCode = httpClient.getResponseCode();
        if (responseCode == 200) {
            JOptionPane.showMessageDialog(null, "Registro exitoso!!");
        } else if (responseCode == 400) {
            JOptionPane.showMessageDialog(null, "Ocurrio un error intentalo de nuevo.");
        } else if (responseCode == 401) {
            JOptionPane.showMessageDialog(null, "Tu tiempo de conexion a espirado. Inicia Sesion nuevamente..");
            Login h = new Login();
            h.setVisible(true);
            this.dispose();
        }

    }

    private void sendGetRU() throws Exception {

        String url = "http://localhost:8000/api";
        String params = "op=BU&usuario=" + user;
        HttpURLConnection httpClient = (HttpURLConnection) new URL(url + "?" + params).openConnection();

        // optional default is GET
        httpClient.setRequestMethod("GET");
        //

        httpClient.setRequestProperty("Authorization", "Bearer " + token);
        int responseCode = httpClient.getResponseCode();
        String respuesta = obtenRespuesta(httpClient);

        if (responseCode == 200) {
            List<String> registros = new ArrayList<String>();
            String[] arr = respuesta.split(",");
            registros = Arrays.asList(arr);

            int distancias = registros.indexOf(" |");
            int tiempo = registros.indexOf(" ||");
            int carr = registros.indexOf(" |||");

            for (int i = 0; i <= distancias - 1; i++) {
                tablaRegUsuario.setValueAt(registros.get(i), i, 0);
            }

            int aux1 = 0;

            for (int j = distancias + 1; j <= tiempo - 1; j++) {
                tablaRegUsuario.setValueAt(registros.get(j), aux1, 1);
                aux1++;
            }

            aux1 = 0;

            for (int k = tiempo + 1; k <= carr - 1; k++) {
                tablaRegUsuario.setValueAt(registros.get(k), aux1, 2);
                aux1++;
            }

            aux1 = 0;

            for (int l = carr + 1; l < registros.size() - 1; l++) {
                tablaRegUsuario.setValueAt(registros.get(l), aux1, 3);
                aux1++;
            }

        } else if (responseCode == 400) {
            JOptionPane.showMessageDialog(null, "Ocurrio un error intentalo de nuevo.");
        } else if (responseCode == 401) {
            JOptionPane.showMessageDialog(null, "Tu tiempo de conexion a espirado. Inicia Sesion nuevamente..");
            Login h = new Login();
            h.setVisible(true);
            this.dispose();
        }else if (responseCode == 412) {
            JOptionPane.showMessageDialog(null, "Aun no tienes ningun registro.");
        }

    }

    private void sendGetG(String tipo) throws Exception {

        String url = "http://localhost:8000/api";
        String params = "op=BG&tipo=" + tipo;
        HttpURLConnection httpClient = (HttpURLConnection) new URL(url + "?" + params).openConnection();

        // optional default is GET
        httpClient.setRequestMethod("GET");
        //

        httpClient.setRequestProperty("Authorization", "Bearer " + token);
        int responseCode = httpClient.getResponseCode();
        String respuesta = obtenRespuesta(httpClient);

        if (responseCode == 200) {
            this.limpiarTabla();
            List<String> registros = new ArrayList<String>();
            String[] arr = respuesta.split(",");
            registros = Arrays.asList(arr);

            int usuarios = registros.indexOf(" |");
            int distancias = registros.indexOf(" ||");
            int tiempos = registros.indexOf(" |||");
            int tipos = registros.indexOf(" ||||");

            for (int i = 0; i <= usuarios - 1; i++) {
                tablaRegGlobal.setValueAt(registros.get(i), i, 0);
            }

            int aux = 0;

            for (int j = usuarios + 1; j <= distancias - 1; j++) {
                tablaRegGlobal.setValueAt(registros.get(j), aux, 1);
                aux++;
            }

            aux = 0;

            for (int k = distancias + 1; k <= tiempos - 1; k++) {
                tablaRegGlobal.setValueAt(registros.get(k), aux, 2);
                aux++;
            }

            aux = 0;

            for (int l = tiempos + 1; l <= tipos - 1; l++) {
                tablaRegGlobal.setValueAt(registros.get(l), aux, 3);
                aux++;
            }

            aux = 0;

            for (int m = tipos + 1; m < registros.size() - 1; m++) {
                tablaRegGlobal.setValueAt(registros.get(m), aux, 4);
                aux++;
            }

        } else if (responseCode == 400) {
            JOptionPane.showMessageDialog(null, "Ocurrio un error.");
        } else if (responseCode == 401) {
            JOptionPane.showMessageDialog(null, "Tu tiempo de conexion a espirado. Inicia Sesion nuevamente..");
            Login h = new Login();
            h.setVisible(true);
            this.dispose();
        } else if (responseCode == 412) {
            JOptionPane.showMessageDialog(null, "No existen registros para este tipo de carrera.");
        }

    }

    private void limpiarTabla() {

        for (int i = 0; i <= 29; i++) {
            tablaRegGlobal.setValueAt(" ", i, 0);
            tablaRegGlobal.setValueAt(" ", i, 1);
            tablaRegGlobal.setValueAt(" ", i, 2);
            tablaRegGlobal.setValueAt(" ", i, 3);
            tablaRegGlobal.setValueAt(" ", i, 4);
        }
    }

    private String obtenRespuesta(HttpURLConnection httpClient) {
        try {
            BufferedReader in = new BufferedReader(
                    new InputStreamReader(httpClient.getInputStream()));
            StringBuilder response = new StringBuilder();
            String line;
            while ((line = in.readLine()) != null) {
                response.append(line);
            }

            return response.toString();

        } catch (IOException e) {
            if (e.getMessage().contains("401")) {
                return "Token invalido";
            }
            return null;

        }
    }
}
